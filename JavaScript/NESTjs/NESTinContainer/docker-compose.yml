version: "3.7"
services: 
  nestjs-server:
    build: 
      context: ./Docker02/Nest/.
      dockerfile: "/media/kirill/WindowsD/Programmieren/ProgramierHilfen/JavaScript/NESTjs/NESTinContainer/Docker02/Nest/Dockerfile"
    image: nestjs_lernen/nestjs-server2
    hostname: nestjs-server2
    container_name: nestjs-server2
    restart: on-failure
    ports:
      - "3000:3000"
      - "9229:9229"
    volumes:
      - ./code:/app
    depends_on: 
      - postgres-db
    networks: 
      nestjs_network:
        ipv4_address: 10.100.120.10
    command: [ "nest", "start", "--debug", "10.100.120.10:9229", "--watch" ] 

  angular-server:
    build: 
      context: ./Docker02/Angular/.
      dockerfile: "/media/kirill/WindowsD/Programmieren/ProgramierHilfen/JavaScript/NESTjs/NESTinContainer/Docker02/Angular/Dockerfile"
    image: nestjs_lernen/angular-server2
    hostname: angular-server2
    container_name: angular-server2
    restart: on-failure
    ports:
      - "4200:4200"
    volumes:
      - .//code:/app
    depends_on: 
      - nestjs-server
    networks: 
      nestjs_network:
        ipv4_address: 10.100.120.20
    #command: [ /bin/bash ]

  postgres-db:
    build: 
      context: ./Docker02/Postgres/.
      dockerfile: "/media/kirill/WindowsD/Programmieren/ProgramierHilfen/JavaScript/NESTjs/NESTinContainer/Docker02/Postgres/Dockerfile"
    image: nestjs_lernen/postgres-db2
    hostname: postgres-db2
    container_name: postgres-db2
    restart: on-failure
    ports:
      - "5432:5432"
    volumes:
      - ./code/pg-data:/var/lib/postgresql
    networks: 
      nestjs_network:
        ipv4_address: 10.100.120.30
    #command: [ /bin/bash ]

networks:
  nestjs_network:
      name: nestjs_network
      ipam: 
          driver: default
          config: 
              - subnet: "10.100.120.0/24"
  
